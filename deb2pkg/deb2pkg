#!/bin/sh
#
# Copyright (c) 2015, 2019 Cory Burgett, cmburget at gmail dot com
#
# Based on rpm2targz Copyright (c) 1997, 1998 Patrick Volkerding
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

if [ "$#" = "0" ]; then
	echo "usage: ${0##*/} <file.deb> ..."
	exit 1
fi

if [ "$(whoami)" != "root" ]; then
	echo "${0##*/} should be run with fakeroot"
	exit 1
fi

# see pkgmk.conf(5).
#
# the table of supported extensions has been copied straight out of
# the bsdtar(1) source code.
# (from the libarchive 3.3.3 distfile, it's in `tar/creation_set.c`).
# note that CRUX doesn't ship with support for all of these by default...
#
# default is gz, as with pkgmk(8).
#
: "${PKGMK_CONF:=/etc/pkgmk.conf}"
if [ -n "$PKGMK_CONF" ] && [ -r "$PKGMK_CONF" ]; then
	. "$PKGMK_CONF" || exit 2
fi
: "${PKGMK_COMPRESSION_MODE:=gz}"

case "$PKGMK_COMPRESSION_MODE" in
	Z)    PZIP=compress;;
	gz)   PZIP=gzip;;
	bz2)  PZIP=bzip2;;
	grz)  PZIP=grzip;;
	lrz)  PZIP=lrzip;;
	lz4)  PZIP=lz4;;
	lzo)  PZIP=lzop;;
	lzma) PZIP=lzma;;
	xz)   PZIP=xz;;
	lz)   PZIP=lzip;;
	zst)  PZIP=zstd;;
	*)   printf '%s: unrecognized PKGMK_COMPRESSION_MODE\n' \
	            "$PKGMK_COMPRESSION_MODE" >&2
	     exit 1
	     ;;
esac

# default extension for CRUX packages
pkgext=".pkg.tar.$PKGMK_COMPRESSION_MODE"


 # If $TMPDIR is not set, then use $TMP.
 # If $TMP is not set either, then mktemp(1) will use /tmp.
: "${TMPDIR:=$TMP}"


for file_deb in "$@"; do
	if [ ! -r "$file_deb" ]; then
		printf '%s: unable to read file\n' "${file_deb}" >&2
		continue
	fi

	dir_deb=$(mktemp -d) || exit 1

	# keep track of errors -- exit is delayed on error until
	# AFTER we've had a chance to clean up the tmp directory
	rc=0

	# extract the deb into the tmp dir
	bsdtar -p -C "$dir_deb" -xf "$file_deb" || rc=1

	# deb packages keep two internal archives, one with metadata
	# and the other with the payload to install;  we'll extract
	# both here, and read a bit of metadata before building our
	# own package out of the payload.
	mkdir "$dir_deb"/meta || rc=1
	mkdir "$dir_deb"/pkg || rc=1
	bsdtar -p -C "$dir_deb"/meta -xf "$dir_deb"/control.tar.* || rc=1
	bsdtar -p -C "$dir_deb"/pkg -xf "$dir_deb"/data.tar.* || rc=1

	pkgname="$(sed -e 's/Package: \(.*\)/\1/p;d' "$dir_deb"/meta/control)"
	pkgver="$(sed -e 's/Version: \(.*\)/\1/p;d' "$dir_deb"/meta/control)"
	file_pkg="${pkgname}#${pkgver}${pkgext}"

	printf '%s => %s\n' "$file_deb" "$file_pkg"

	# create the pkg
	dir_pkg="${dir_deb}/pkg"
	find "$dir_pkg" -type d -perm 700 -exec chmod 755 {} \; || rc=1
	bsdtar -c --$PZIP -f "$file_pkg" -C "$dir_pkg" --strip-components 1 . \
	|| rc=1

	# clean up after ourselves
	rm -rf "$dir_deb"

	# report any errors, if they maybe happened
	[ "$rc" = "0" ] || {
		printf '%s: an error occurred while converting the package.\n' \
		       "$file_deb" >&2
	}
done

exit 0
